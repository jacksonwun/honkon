apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-svc-frontend
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/issue-temporary-certificate: "true"
    acme.cert-manager.io/http01-edit-in-place: "true"

spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - honkon.life
    secretName: example-issuer-account-key
  rules:
  - host: honkon.life
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: react-cluster-ip-service
            port:
              number: 81
  - host: uk.honkon.life
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: react-cluster-ip-service
            port:
              number: 81



---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-svc-backend
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"    
    nginx.ingress.kubernetes.io/client-max-body-size: "10M"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod

spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - django.honkon.life
    secretName: example-issuer-account-key
  rules:
  - host: django.honkon.life
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: django-cluster-ip-service
            port:
              number: 80